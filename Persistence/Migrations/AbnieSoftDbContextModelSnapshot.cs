// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(AbnieSoftDbContext))]
    partial class AbnieSoftDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Domain.Entities.ACC.AccDocmentDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AccDocumentId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AccDocumentNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AccDocumentRowDate")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("AccDocumentRowDescription")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT");

                    b.Property<int?>("AccDocumentRowNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AccDocumentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BusinessId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CreditorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("DebtorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<long?>("FK_AccDocumentRowLastModifierId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Inflection")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUpdate")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("KolId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("MoeinId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Tafzili2Id")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Tafzili3Id")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("TafziliId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("KolId");

                    b.HasIndex("MoeinId");

                    b.HasIndex("Tafzili2Id");

                    b.HasIndex("Tafzili3Id");

                    b.HasIndex("TafziliId");

                    b.ToTable("AccDocmentDetails");
                });

            modelBuilder.Entity("Domain.Entities.ACC.Kol", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccKolCode")
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<long>("BusinessId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Finalbalance")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FirstTotalCreditorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FirstTotalDebtorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KolCode")
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<string>("KolName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NatureFinalBalance")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("TotalCreditorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("TotalDebtorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.HasKey("Id");

                    b.ToTable("Kols");
                });

            modelBuilder.Entity("Domain.Entities.ACC.Moein", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccMoeinCode")
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccNatureId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("BusinessId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Finalbalance")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FirstTotalCreditorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FirstTotalDebtorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<long>("KolId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("MoeinCode")
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<string>("MoeinName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("NatureFinalBalance")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("TotalCreditorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("TotalDebtorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.HasKey("Id");

                    b.HasIndex("KolId");

                    b.ToTable("Moeins");
                });

            modelBuilder.Entity("Domain.Entities.ACC.MoeinTafziliGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("BusinessId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("MoeinId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TafziliGroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MoeinId");

                    b.HasIndex("TafziliGroupId");

                    b.ToTable("MoeinTafziliGroups");
                });

            modelBuilder.Entity("Domain.Entities.ACC.Tafzili", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccTafziliCode")
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<long>("BusinessId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Finalbalance")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FinalbalanceTafzili2")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FinalbalanceTafzili3")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FirstTotalCreditorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FirstTotalCreditorValueTafzili2")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FirstTotalCreditorValueTafzili3")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FirstTotalDebtorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FirstTotalDebtorValueTafzili2")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FirstTotalDebtorValueTafzili3")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NatureFinalBalance")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NatureFinalBalanceTafzili2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NatureFinalBalanceTafzili3")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<string>("SharedKey")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Tafzili2")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Tafzili3")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TafziliCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<long?>("TafziliGroupId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TafziliName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<long?>("TafziliRef")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<int>("TafziliType")
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("TotalCreditorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("TotalCreditorValueTafzili2")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("TotalCreditorValueTafzili3")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("TotalDebtorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("TotalDebtorValueTafzili2")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("TotalDebtorValueTafzili3")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.HasKey("Id");

                    b.ToTable("Tafzilis");
                });

            modelBuilder.Entity("Domain.Entities.ACC.Tafzili2", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("BusinessId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Finalbalance")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FirstTotalCreditorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FirstTotalDebtorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NatureFinalBalance")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Tafzili2Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tafzili2Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalCreditorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("TotalDebtorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.HasKey("Id");

                    b.ToTable("Tafzili2s");
                });

            modelBuilder.Entity("Domain.Entities.ACC.Tafzili3", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("BusinessId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Finalbalance")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FirstTotalCreditorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FirstTotalDebtorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NatureFinalBalance")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Tafzili3Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tafzili3Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalCreditorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("TotalDebtorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.HasKey("Id");

                    b.ToTable("Tafzili3s");
                });

            modelBuilder.Entity("Domain.Entities.ACC.TafziliGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("BusinessId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Finalbalance")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FirstTotalCreditorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("FirstTotalDebtorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NatureFinalBalance")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TafziliGroupCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<string>("TafziliGroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<long>("TafziliTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("TotalCreditorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("TotalDebtorValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.HasKey("Id");

                    b.HasIndex("TafziliTypeId");

                    b.ToTable("TafziliGroups");
                });

            modelBuilder.Entity("Domain.Entities.ACC.TafziliType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TafziliTypeCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<string>("TafziliTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TafziliTypes");
                });

            modelBuilder.Entity("Domain.Entities.FIN.PaymentCheque", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AccDocumentId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BankId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BusinessId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ContractId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsFirstPeriod")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsGuarantee")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUpdate")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("MoeinForBankId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MoeinForPaymentChequeId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MoeinForReciverId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PaymentChequeDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentChequeDescription")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PaymentChequeLastState")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PaymentChequeNumber")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PaymentChequeRowNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<string>("PaymentChequeSayyadiNumber")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PaymentChequeValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PaymentId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PaymentNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ReciverId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("ContractId");

                    b.HasIndex("MoeinForBankId");

                    b.HasIndex("MoeinForPaymentChequeId");

                    b.HasIndex("MoeinForReciverId");

                    b.HasIndex("ReciverId");

                    b.ToTable("PaymentCheques");
                });

            modelBuilder.Entity("Domain.Entities.FIN.ReceiveCheque", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AccDocumentId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BankId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BusinessId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ContractId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsFirstPeriod")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsGuarantee")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUpdate")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("MoeinForBankId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MoeinForPayerId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MoeinForPaymentToId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MoeinForReceiveChequeId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PayerId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PaymentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("PaymentToDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PaymentToId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReceiveChequeBeforeLastState")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ReceiveChequeDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReceiveChequeDescription")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ReceiveChequeLastState")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReceiveChequeNumber")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ReceiveChequeRowNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReceiveChequeSayyadiNumber")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ReceiveChequeValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime?>("ReceiveDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ReceiveId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReceiveNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("ContractId");

                    b.HasIndex("MoeinForBankId");

                    b.HasIndex("MoeinForPayerId");

                    b.HasIndex("MoeinForPaymentToId");

                    b.HasIndex("MoeinForReceiveChequeId");

                    b.HasIndex("PayerId");

                    b.HasIndex("PaymentToId");

                    b.ToTable("ReceiveCheques");
                });

            modelBuilder.Entity("Domain.Entities.PRO.Contract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BusinessId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContractAgreements")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ContractCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ContractEndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContractLocation")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ContractNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ContractPeriod")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("ContractPrice")
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime?>("ContractStartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContractTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ContractType")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ContractorId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("CostEstimation")
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("MoeinId")
                        .HasColumnType("INTEGER");

                    b.Property<float?>("PercentageOfChanges")
                        .HasColumnType("REAL");

                    b.Property<long?>("TenderId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MoeinId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Domain.Entities.PRO.CostList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AccDocumentId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BusinessId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ContractId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CostListDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CostListDescription")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CostListNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CostListType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("FK_AccDocumentRowLastModifierId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("InstantPaymentId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUpdate")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("MoeinForInstantPaymentId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MoeinForemployerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PaymentType")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("StoreId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("TotallyCostList")
                        .HasColumnType("decimal(19,4)");

                    b.Property<long?>("WorkshopId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("employerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("InstantPaymentId");

                    b.HasIndex("StoreId");

                    b.HasIndex("employerId");

                    b.ToTable("CostLists");
                });

            modelBuilder.Entity("Domain.Entities.PRO.CostListDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AccDocumentId")
                        .HasColumnType("INTEGER");

                    b.Property<float?>("AmountMaterial")
                        .HasColumnType("REAL");

                    b.Property<long?>("BankId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BusinessId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CostListFactorId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CostListId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CostListNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CostListRowDate")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CostListRowDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CostListRowInitialValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<int?>("CostListRowNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("CostListRowfinalValue")
                        .IsRequired()
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("FK_AccDocumentRowLastModifierId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUpdate")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("KolId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("MaterialGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MaterialId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MaterialUnitId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MoeinForBankId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MoeinForSideFactorId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MoeinForSupplierId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MoeinId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("PriceMaterial")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReceiptNumber")
                        .HasColumnType("TEXT");

                    b.Property<long?>("SideFactorId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("SupplierId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Tafzili2Id")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Tafzili3Id")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("TafziliId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("CostListId");

                    b.HasIndex("MaterialGroupId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("MaterialUnitId");

                    b.HasIndex("MoeinId");

                    b.HasIndex("SideFactorId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("Tafzili2Id");

                    b.HasIndex("Tafzili3Id");

                    b.HasIndex("TafziliId");

                    b.ToTable("CostListDetails");
                });

            modelBuilder.Entity("Domain.Entities.PRO.Material", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BusinessId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MaterialCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<string>("MaterialDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<long?>("MaterialGroupId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MaterialTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MaterialType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MaterialUnitId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MaterialGroupId");

                    b.HasIndex("MaterialUnitId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("Domain.Entities.PRO.MaterialCirculation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AccDocumentId")
                        .HasColumnType("INTEGER");

                    b.Property<float?>("AmountMaterialEntered")
                        .HasColumnType("REAL");

                    b.Property<float?>("AmountMaterialOutput")
                        .HasColumnType("REAL");

                    b.Property<long?>("BusinessId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BuyFactorId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ContractId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CostListId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("FK_MaterialCirculationRowLastModifierId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUpdate")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MaterialCirculationOperationNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("MaterialCirculationRowDate")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("MaterialCirculationRowDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("MaterialCirculationRowNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaterialCirculationType")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MaterialGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MaterialId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MaterialUnitId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("PriceMaterialEntered")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PriceMaterialOutput")
                        .HasColumnType("TEXT");

                    b.Property<long?>("StoreId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("SupplierId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("CostListId");

                    b.HasIndex("MaterialGroupId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("MaterialUnitId");

                    b.HasIndex("StoreId");

                    b.HasIndex("SupplierId");

                    b.ToTable("MaterialCirculations");
                });

            modelBuilder.Entity("Domain.Entities.PRO.MaterialGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BusinessId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MaterialGroupCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<string>("MaterialGroupTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MaterialGroups");
                });

            modelBuilder.Entity("Domain.Entities.PRO.MaterialUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BusinessId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MaterialUnitCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<string>("MaterialUnitTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MaterialUnits");
                });

            modelBuilder.Entity("Domain.Entities.PRO.ProjectStatusFactor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BusinessId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("MoeinId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProjectStatusFactorCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<float?>("ProjectStatusFactorPercent")
                        .HasColumnType("REAL");

                    b.Property<string>("ProjectStatusFactorTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProjectStatusFactorType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProjectStatusFactorUser")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MoeinId");

                    b.ToTable("ProjectStatusFactors");
                });

            modelBuilder.Entity("Domain.Entities.PRO.Store", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BusinessId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("MoeinId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StoreAddress")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("StoreAdmin")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("StoreCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<string>("StoreTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MoeinId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Domain.Entities.PRO.Tender", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AmountWork")
                        .HasColumnType("TEXT");

                    b.Property<long?>("BusinessId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlaceOfWork")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlaceOfWorksaleOfTenderDocuments")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PrePayment")
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal?>("ProposedPrice")
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime?>("ReadingTenderOffersDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReadingTenderOffersPlace")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TenderCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TenderDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TenderEndDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TenderNumber")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("TenderOwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TenderPeriod")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TenderStartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TenderTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("TenderType")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("WarrancyAmount")
                        .HasColumnType("decimal(19,4)");

                    b.HasKey("Id");

                    b.HasIndex("TenderOwnerId");

                    b.ToTable("Tenders");
                });

            modelBuilder.Entity("Domain.Entities.ACC.AccDocmentDetails", b =>
                {
                    b.HasOne("Domain.Entities.ACC.Kol", "Kol")
                        .WithMany()
                        .HasForeignKey("KolId");

                    b.HasOne("Domain.Entities.ACC.Moein", "Moein")
                        .WithMany()
                        .HasForeignKey("MoeinId");

                    b.HasOne("Domain.Entities.ACC.Tafzili2", "Tafzili2")
                        .WithMany()
                        .HasForeignKey("Tafzili2Id");

                    b.HasOne("Domain.Entities.ACC.Tafzili3", "Tafzili3")
                        .WithMany()
                        .HasForeignKey("Tafzili3Id");

                    b.HasOne("Domain.Entities.ACC.Tafzili", "Tafzili")
                        .WithMany()
                        .HasForeignKey("TafziliId");

                    b.Navigation("Kol");

                    b.Navigation("Moein");

                    b.Navigation("Tafzili");

                    b.Navigation("Tafzili2");

                    b.Navigation("Tafzili3");
                });

            modelBuilder.Entity("Domain.Entities.ACC.Moein", b =>
                {
                    b.HasOne("Domain.Entities.ACC.Kol", null)
                        .WithMany("Moeins")
                        .HasForeignKey("KolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.ACC.MoeinTafziliGroup", b =>
                {
                    b.HasOne("Domain.Entities.ACC.Moein", "Moein")
                        .WithMany("MoeinTafziliGroups")
                        .HasForeignKey("MoeinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ACC.TafziliGroup", null)
                        .WithMany("MoeinTafziliGroups")
                        .HasForeignKey("TafziliGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moein");
                });

            modelBuilder.Entity("Domain.Entities.ACC.TafziliGroup", b =>
                {
                    b.HasOne("Domain.Entities.ACC.TafziliType", null)
                        .WithMany("TafziliGroups")
                        .HasForeignKey("TafziliTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.FIN.PaymentCheque", b =>
                {
                    b.HasOne("Domain.Entities.ACC.Tafzili", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId");

                    b.HasOne("Domain.Entities.PRO.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");

                    b.HasOne("Domain.Entities.ACC.Moein", "MoeinForBank")
                        .WithMany()
                        .HasForeignKey("MoeinForBankId");

                    b.HasOne("Domain.Entities.ACC.Moein", "MoeinForPaymentCheque")
                        .WithMany()
                        .HasForeignKey("MoeinForPaymentChequeId");

                    b.HasOne("Domain.Entities.ACC.Moein", "MoeinForReciver")
                        .WithMany()
                        .HasForeignKey("MoeinForReciverId");

                    b.HasOne("Domain.Entities.ACC.Tafzili", "Reciver")
                        .WithMany()
                        .HasForeignKey("ReciverId");

                    b.Navigation("Bank");

                    b.Navigation("Contract");

                    b.Navigation("MoeinForBank");

                    b.Navigation("MoeinForPaymentCheque");

                    b.Navigation("MoeinForReciver");

                    b.Navigation("Reciver");
                });

            modelBuilder.Entity("Domain.Entities.FIN.ReceiveCheque", b =>
                {
                    b.HasOne("Domain.Entities.ACC.Tafzili", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId");

                    b.HasOne("Domain.Entities.PRO.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");

                    b.HasOne("Domain.Entities.ACC.Moein", "MoeinForBank")
                        .WithMany()
                        .HasForeignKey("MoeinForBankId");

                    b.HasOne("Domain.Entities.ACC.Moein", "MoeinForPayer")
                        .WithMany()
                        .HasForeignKey("MoeinForPayerId");

                    b.HasOne("Domain.Entities.ACC.Moein", "MoeinForPaymentTo")
                        .WithMany()
                        .HasForeignKey("MoeinForPaymentToId");

                    b.HasOne("Domain.Entities.ACC.Moein", "MoeinForReceiveCheque")
                        .WithMany()
                        .HasForeignKey("MoeinForReceiveChequeId");

                    b.HasOne("Domain.Entities.ACC.Tafzili", "Payer")
                        .WithMany()
                        .HasForeignKey("PayerId");

                    b.HasOne("Domain.Entities.ACC.Tafzili", "PaymentTo")
                        .WithMany()
                        .HasForeignKey("PaymentToId");

                    b.Navigation("Bank");

                    b.Navigation("Contract");

                    b.Navigation("MoeinForBank");

                    b.Navigation("MoeinForPayer");

                    b.Navigation("MoeinForPaymentTo");

                    b.Navigation("MoeinForReceiveCheque");

                    b.Navigation("Payer");

                    b.Navigation("PaymentTo");
                });

            modelBuilder.Entity("Domain.Entities.PRO.Contract", b =>
                {
                    b.HasOne("Domain.Entities.ACC.Moein", "Moein")
                        .WithMany()
                        .HasForeignKey("MoeinId");

                    b.Navigation("Moein");
                });

            modelBuilder.Entity("Domain.Entities.PRO.CostList", b =>
                {
                    b.HasOne("Domain.Entities.PRO.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");

                    b.HasOne("Domain.Entities.ACC.Tafzili", "InstantPayment")
                        .WithMany()
                        .HasForeignKey("InstantPaymentId");

                    b.HasOne("Domain.Entities.PRO.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.HasOne("Domain.Entities.ACC.Tafzili", "employer")
                        .WithMany()
                        .HasForeignKey("employerId");

                    b.Navigation("Contract");

                    b.Navigation("InstantPayment");

                    b.Navigation("Store");

                    b.Navigation("employer");
                });

            modelBuilder.Entity("Domain.Entities.PRO.CostListDetails", b =>
                {
                    b.HasOne("Domain.Entities.ACC.Tafzili", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId");

                    b.HasOne("Domain.Entities.PRO.CostList", "CostList")
                        .WithMany()
                        .HasForeignKey("CostListId");

                    b.HasOne("Domain.Entities.PRO.MaterialGroup", "MaterialGroup")
                        .WithMany()
                        .HasForeignKey("MaterialGroupId");

                    b.HasOne("Domain.Entities.PRO.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.HasOne("Domain.Entities.PRO.MaterialUnit", "MaterialUnit")
                        .WithMany()
                        .HasForeignKey("MaterialUnitId");

                    b.HasOne("Domain.Entities.ACC.Moein", "Moein")
                        .WithMany()
                        .HasForeignKey("MoeinId");

                    b.HasOne("Domain.Entities.ACC.Tafzili", "SideFactor")
                        .WithMany()
                        .HasForeignKey("SideFactorId");

                    b.HasOne("Domain.Entities.ACC.Tafzili", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("Domain.Entities.ACC.Tafzili2", "Tafzili2")
                        .WithMany()
                        .HasForeignKey("Tafzili2Id");

                    b.HasOne("Domain.Entities.ACC.Tafzili3", "Tafzili3")
                        .WithMany()
                        .HasForeignKey("Tafzili3Id");

                    b.HasOne("Domain.Entities.ACC.Tafzili", "Tafzili")
                        .WithMany()
                        .HasForeignKey("TafziliId");

                    b.Navigation("Bank");

                    b.Navigation("CostList");

                    b.Navigation("Material");

                    b.Navigation("MaterialGroup");

                    b.Navigation("MaterialUnit");

                    b.Navigation("Moein");

                    b.Navigation("SideFactor");

                    b.Navigation("Supplier");

                    b.Navigation("Tafzili");

                    b.Navigation("Tafzili2");

                    b.Navigation("Tafzili3");
                });

            modelBuilder.Entity("Domain.Entities.PRO.Material", b =>
                {
                    b.HasOne("Domain.Entities.PRO.MaterialGroup", "MaterialGroup")
                        .WithMany()
                        .HasForeignKey("MaterialGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.PRO.MaterialUnit", "MaterialUnit")
                        .WithMany()
                        .HasForeignKey("MaterialUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialGroup");

                    b.Navigation("MaterialUnit");
                });

            modelBuilder.Entity("Domain.Entities.PRO.MaterialCirculation", b =>
                {
                    b.HasOne("Domain.Entities.PRO.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");

                    b.HasOne("Domain.Entities.PRO.CostList", "CostList")
                        .WithMany()
                        .HasForeignKey("CostListId");

                    b.HasOne("Domain.Entities.PRO.MaterialGroup", "MaterialGroup")
                        .WithMany()
                        .HasForeignKey("MaterialGroupId");

                    b.HasOne("Domain.Entities.PRO.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.HasOne("Domain.Entities.PRO.MaterialUnit", "MaterialUnit")
                        .WithMany()
                        .HasForeignKey("MaterialUnitId");

                    b.HasOne("Domain.Entities.PRO.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.HasOne("Domain.Entities.ACC.Tafzili", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("Contract");

                    b.Navigation("CostList");

                    b.Navigation("Material");

                    b.Navigation("MaterialGroup");

                    b.Navigation("MaterialUnit");

                    b.Navigation("Store");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Domain.Entities.PRO.ProjectStatusFactor", b =>
                {
                    b.HasOne("Domain.Entities.ACC.Moein", "Moein")
                        .WithMany()
                        .HasForeignKey("MoeinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moein");
                });

            modelBuilder.Entity("Domain.Entities.PRO.Store", b =>
                {
                    b.HasOne("Domain.Entities.ACC.Moein", "Moein")
                        .WithMany()
                        .HasForeignKey("MoeinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moein");
                });

            modelBuilder.Entity("Domain.Entities.PRO.Tender", b =>
                {
                    b.HasOne("Domain.Entities.ACC.Tafzili", "Tafzili")
                        .WithMany()
                        .HasForeignKey("TenderOwnerId");

                    b.Navigation("Tafzili");
                });

            modelBuilder.Entity("Domain.Entities.ACC.Kol", b =>
                {
                    b.Navigation("Moeins");
                });

            modelBuilder.Entity("Domain.Entities.ACC.Moein", b =>
                {
                    b.Navigation("MoeinTafziliGroups");
                });

            modelBuilder.Entity("Domain.Entities.ACC.TafziliGroup", b =>
                {
                    b.Navigation("MoeinTafziliGroups");
                });

            modelBuilder.Entity("Domain.Entities.ACC.TafziliType", b =>
                {
                    b.Navigation("TafziliGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
